apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fluentd-elasticsearch.fullname" . }}
  labels:
{{ include "fluentd-elasticsearch.labels" . | indent 4 }}
    {{- if semverCompare "> 1.6" .Capabilities.KubeVersion.GitVersion }}
    kubernetes.io/cluster-service: "true"
    {{- end }}
    addonmanager.kubernetes.io/mode: Reconcile
data:
{{- if .Values.configMaps.useDefaults.systemConf }}
  system.conf: |-
    <system>
      root_dir /tmp/fluentd-buffers/
    </system>
{{- end }}

{{- if .Values.configMaps.useDefaults.containersInputConf }}
  containers.input.conf: |-
    <source>
      @id fluentd-containers.log
      @type tail
      path "{{ .Values.configMaps.logsPath }}"
      exclude_path {{ .Values.configMaps.excludePath }}
      pos_file /var/log/containers.log.pos
      tag raw.kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
        <pattern>
          format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
      </parse>
    </source>

    # Detect exceptions in the log output and forward them as one log entry.
    <match raw.kubernetes.**>
      @id raw.kubernetes
      @type detect_exceptions
      remove_tag_prefix raw
      message log
      stream stream
      multiline_flush_interval 5
      max_bytes 500000
      max_lines 1000
    </match>

    # Concatenate multi-line logs
    <filter **>
      @id filter_concat
      @type concat
      key message
      multiline_end_regexp /\n$/
      separator ""
      timeout_label @NORMAL
      flush_interval 5
    </filter>

    # <filter **>
    #   @type concat
    #   key log
    #   separator ""
    #   use_partial_metadata true
    #   # flush_interval 5
    #   # use_first_timestamp true
    #   # keep_partial_metadata true
    # </filter>

    # Enriches records with Kubernetes metadata
    <filter kubernetes.**>
      @id filter_kubernetes_metadata
      @type kubernetes_metadata
    </filter>

    # Fixes json fields in Elasticsearch
    <filter kubernetes.**>
      @id filter_parser
      @type parser
      key_name log
      reserve_data true
      remove_key_name_field true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key ""
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </filter>
    <filter **>
      @type record_transformer
      remove_keys {{ .Values.configMaps.removeKeys }}
    </filter>
{{- end }}
{{- if .Values.configMaps.useDefaults.outputConf }}
  output.conf: |-
    # handle timeout log lines from concat plugin
    <match **>
      @type relabel
      @label @NORMAL
    </match>

    <label @NORMAL>
    # <match kubernetes.var.log.containers.*_istio-system_**>
    #   @type null
    # </match>
    # <match kubernetes.var.log.containers.*_kube-system_**>
    #   @type null
    # </match>
{{- if .Values.configMaps.extraNamespaceFilter }}
{{- $root := . -}}
{{- range .Values.configMaps.extraNamespaceFilter }}
    <match kubernetes.var.log.containers.*_{{ . }}_**>
      @id elasticsearch-{{ . }}
      @type elasticsearch
      @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
      include_tag_key false
      host "#{ENV['OUTPUT_HOST']}"
      port "#{ENV['OUTPUT_PORT']}"
      path "#{ENV['OUTPUT_PATH']}"
      scheme "#{ENV['OUTPUT_SCHEME']}"
      ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
      ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
{{- if (ne $root.Values.elasticsearch.typeName "") }}
      type_name "#{ENV['OUTPUT_TYPE_NAME']}"
{{- end }}
{{- if $root.Values.elasticsearch.auth.enabled }}
      user "#{ENV['OUTPUT_USER']}"
      password "#{ENV['OUTPUT_PASSWORD']}"
{{- end }}
      logstash_format true
      logstash_prefix logs-{{ . }}
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer.{{ . }}
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
        queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
        overflow_action block
      </buffer>
    </match>
{{- end }}
{{- end }}
    <match kubernetes.var.log.containers.**>
      @id elasticsearch-apps
      @type elasticsearch
      @log_level "#{ENV['OUTPUT_LOG_LEVEL']}"
      include_tag_key false
      host "#{ENV['OUTPUT_HOST']}"
      port "#{ENV['OUTPUT_PORT']}"
      path "#{ENV['OUTPUT_PATH']}"
      scheme "#{ENV['OUTPUT_SCHEME']}"
      ssl_verify "#{ENV['OUTPUT_SSL_VERIFY']}"
      ssl_version "#{ENV['OUTPUT_SSL_VERSION']}"
{{- if (ne .Values.elasticsearch.typeName "") }}
      type_name "#{ENV['OUTPUT_TYPE_NAME']}"
{{- end }}
{{- if .Values.elasticsearch.auth.enabled }}
      user "#{ENV['OUTPUT_USER']}"
      password "#{ENV['OUTPUT_PASSWORD']}"
{{- end }}
      logstash_format true
      logstash_prefix logs-apps
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer.apps
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
        queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
        overflow_action block
      </buffer>
    </match>
    </label>
{{- end }}

{{- range $key, $value := .Values.extraConfigMaps }}
  {{ $key }}: |-
{{ $value | indent 4 }}
{{- end }}
